import React, { useState, useEffect, useReducer } from 'react';
import './main.css';
import {
    Button,
    TextField
} from '@material-ui/core'

function Home() {

const [number, setNumber] = useState('0');
const [number2, setNumber2] = useState('0');

const RandomNumber = () => {
  // add side effect to component
  useEffect(() => {
    // create interval
    const interval = setInterval(
      // set number every 3s
      () => setNumber(Math.floor(Math.random() * 10 + 1)),
      10000
    );

    const interval2 = setInterval(
      // set number every 3s
      () => setNumber2(Math.floor(Math.random() * 10 + 1)),
      10000
    );

    // clean up interval on unmount
    return () => {
      clearInterval(interval);
      clearInterval(interval2);
    };
  }, []);

  return <p>{number} x {number2} = </p>;
};

const answer = number * number2;
//const question = //;
// If input === num1 * num2 then add +1 to score
      //attempt 3
      const [score, setScore] = useState('00');

// //Timer
const [second, setSecond] = useState('00');
const [isActive, setIsActive] = useState(false);
const [counter, setCounter] = useState(0);


  useEffect(() => {
    let intervalId;
    //isActive = toggle start or pause
    if (isActive) {
      intervalId = setInterval(() => {
        const secondCounter = counter % 60;
        const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;
        
        setSecond(computedSecond);
        setCounter(counter => counter + 1);
      }, 1000)
    }

    return () => clearInterval(intervalId);
  }, [isActive, counter])
  
  //Reset to 00 (for now)
    function stopTimer() {
      setIsActive(false);
      setCounter(0);
      setSecond('00');
      setScore('0');
      setNumber('0');
      setNumber2('0');
    }

  return (
    <div className="App">
      <header className="App-header">
       Multiplication Game
      </header>
        <br></br>
      <div>
        <span id="timer" >Time: {second} || </span>
    
        <span id="score">Score: {score}</span>
      </div>
        <br></br>
      <Button
        onClick={() => setIsActive(!isActive)} 
        variant="contained"
        className="btn btn-default" 
        id="play">{isActive ? "Pause": "Start"}
      </Button>
        <br></br>
        <br></br>
      <div className="game-container">
        <span id="question">
          
           </span>
           <RandomNumber/> {answer}
        <form>
        <TextField variant="outlined" id="answer" onSubmit={() => ("")}></TextField>
        
        </form>
      </div>
        <br></br>
      <Button 
      onClick={stopTimer} 
      variant="contained">End</Button>
      
    </div>
  );
}

export default Home;
